------------------------------------------------------------
# Base Install
------------------------------------------------------------
Raspberry PI Imager herunterladen und starten
	Server Name vergeben
	WLAN konfigurieren
	User und Passwort einstellen
Raspberry PI OS 64 Bit direkt per USB auf SSD schreiben
SSD Brücke einstecken
System starten
Boot Vorgang abwarten
Mit SSH über WLAN oder LAN anmelden

------------------------------------------------------------
# Raspberry base configuration using raspi config tool
------------------------------------------------------------
sudo raspi-config

# Change the following raspi config options:
#
#	Update (Raspi-Conf)
#	Display Optionen
#		VNC Auflösung 1920x1080 auswählen
#	Interface Options
#		VNC Enable
#	Performance Options
#		GPU Memory
#			256
#	Advanced Options
#		Expand Filesystem

sudo apt -y update && sudo apt -y upgrade && sudo apt full-upgrade && sudo apt autoremove
sudo reboot now

------------------------------------------------------------
# Install docker
------------------------------------------------------------
curl -fsSL https://get.docker.com | sh

# User PI sudo prviviledges
# User PI member of docker group
# Reboot to activate changes
sudo usermod -aG sudo pi && sudo usermod -aG docker pi && sudo reboot

# Check if docker works without sudo
docker ps

# Check if docker compose works
docker compose

------------------------------------------------------------
# Install some helper tools
------------------------------------------------------------
sudo apt install -y mc screen

------------------------------------------------------------
# Assign alsa names to USB Ports
------------------------------------------------------------

sudo nano /etc/udev/rules.d/85-my-usb-audio.rules

RPi 2 Model B v1.1 [Radiobox2]
--------------------------------------------------------
SUBSYSTEM!="sound", GOTO="my_usb_audio_end"
ACTION!="add", GOTO="my_usb_audio_end"
DEVPATH=="/devices/platform/soc/3f980000.usb/usb1/1-1/1-1.2/1-1.2:1.0/sound/card?", ATTR{id}="Alpha"
DEVPATH=="/devices/platform/soc/3f980000.usb/usb1/1-1/1-1.3/1-1.3:1.0/sound/card?", ATTR{id}="Bravoe"
DEVPATH=="/devices/platform/soc/3f980000.usb/usb1/1-1/1-1.4/1-1.4:1.0/sound/card?", ATTR{id}="Charlie"
DEVPATH=="/devices/platform/soc/3f980000.usb/usb1/1-1/1-1.5/1-1.5:1.0/sound/card?", ATTR{id}="Delta"
LABEL="my_usb_audio_end"

RPi 1 Model B+ v1.2 [Radiobox2]
--------------------------------------------------------
SUBSYSTEM!="sound", GOTO="my_usb_audio_end"
ACTION!="add", GOTO="my_usb_audio_end"
DEVPATH=="/devices/platform/soc/20980000.usb/usb1/1-1/1-1.2/1-1.2:1.0/sound/card?", ATTR{id}="Alpha"
DEVPATH=="/devices/platform/soc/20980000.usb/usb1/1-1/1-1.3/1-1.3:1.0/sound/card?", ATTR{id}="Bravo"
DEVPATH=="/devices/platform/soc/20980000.usb/usb1/1-1/1-1.4/1-1.4:1.0/sound/card?", ATTR{id}="Charlie"
DEVPATH=="/devices/platform/soc/20980000.usb/usb1/1-1/1-1.5/1-1.5:1.0/sound/card?", ATTR{id}="Delta"
LABEL="my_usb_audio_end"

OrangePI4 LTS [Orange]
--------------------------------------------------------
SUBSYSTEM!="sound", GOTO="my_usb_audio_end"
ACTION!="add", GOTO="my_usb_audio_end"
DEVPATH=="/devices/platform/usb@fe900000/fe900000.usb/xhci-hcd.1.auto/usb1/1-1/1-1:1.0/sound/card?", ATTR{id}="Alpha"
DEVPATH=="/devices/platform/fe3e0000.usb/usb4/4-1/4-1:1.0/sound/card?", ATTR{id}="Bravo"
DEVPATH=="/devices/platform/fe3a0000.usb/usb8/8-1/8-1:1.0/sound/card?", ATTR{id}="Charlie"
LABEL="my_usb_audio_end"

RPi 4 Model B 8GB [Radiobox]
--------------------------------------------------------
SUBSYSTEM!="sound", GOTO="my_usb_audio_end"
ACTION!="add", GOTO="my_usb_audio_end"
DEVPATH=="/devices/platform/scb/fd500000.pcie/pci0000:00/0000:00:00.0/0000:01:00.0/usb1/1-1/1-1.3/1-1.3:1.0/sound/card?", ATTR{id}="Alpha"
DEVPATH=="/devices/platform/scb/fd500000.pcie/pci0000:00/0000:00:00.0/0000:01:00.0/usb1/1-1/1-1.4/1-1.4:1.0/sound/card?", ATTR{id}="Bravo"
DEVPATH=="/devices/platform/scb/fd500000.pcie/pci0000:00/0000:00:00.0/0000:01:00.0/usb1/1-1/1-1.1/1-1.1:1.0/sound/card?", ATTR{id}="Charlie"
DEVPATH=="/devices/platform/scb/fd500000.pcie/pci0000:00/0000:00:00.0/0000:01:00.0/usb1/1-1/1-1.2/1-1.2:1.0/sound/card?", ATTR{id}="Delta"
LABEL="my_usb_audio_end"

# Reboot to make chages active
sudo reboot


------------------------------------------------------------
# Install Nexus Container
------------------------------------------------------------
git config --global pull.rebase false

# Choose one
# 1-Latest Release
git clone https://github.com/HarlekinSimplex/nexus.git
# 2-Latest Development
git clone -b development https://github.com/HarlekinSimplex/nexus.git

# Move into nexus directory
cd nexus

# Create .env configuration file from .env_master
# Choose one
# 1-Default template (Contains all environment variables with defaults that are used if no env is given)
bash create_env.sh
# 2-No default template - If you like to use one of the preconfigured templates from .env_master use that one as parameter
bash create_env.sh [<config template name>]

# Start container
# Choose one
# 1-Start container with server and detach it from console
docker compose up -d
# Trail log from container
docker compose logs -f
# Shutown container
docker compose down

# 2-Start container with console still attached (log will be shown at the console)
docker compose up
# Shutdown container with just pressing ctrl-c or terminating the ssh shell

------------------------------------------------------------
# Update local repo from remote git repo
------------------------------------------------------------
# Reset local copy and pull from remote git repo
# Choose one
# 1-Pull repo and overwrite .env file with the actual default template
bash nexus_pull.sh
# 2-Pull repo and overwrite .env file with a predefined template from .env_master (like above)
bash nexus_pull.sh [<config template name>]
# 3-Pull repo but do not touch current (possibly modified) .env file
bash nexus_pull.sh NO_ENV

------------------------------------------------------------
# Recreate/Restore .env from .env_master
------------------------------------------------------------
# If you want to recreate the .env file from .env_master without pulling the repo and resetting the whole nexus_root* tree ...
# Choose one
# 1-Overwrite .env file with the default template from .env_master
bash create_env.sh
# 2-Overwrite .env file with the given template from .env_master (like above)
bash create_env.sh [<config template name>]

# For more information regarding configuration templates for .env just study the content of .env_master
# The mechanism is more or less straight forward and easy to grasp but quite powerful though ;-)
